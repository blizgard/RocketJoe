FROM quay.io/pypa/manylinux2014_x86_64

#ENV TZ=America/US
#ENV DEBIAN_FRONTEND=noninteractive

RUN yum install -y ninja-build python3-pip python3-devel wget unzip zip gcc-c++ java-11-openjdk-devel
RUN wget https://releases.bazel.build/4.1.0/release/bazel-4.1.0-dist.zip
RUN unzip bazel-4.1.0-dist.zip -d bazel
RUN ls -l /usr/lib/jvm/
RUN        PYTHON_PATH=/opt/python/cp39-cp39 &&\
        JAVA_HOME="/usr/lib/jvm/java-11-openjdk-11.0.15.0.9-2.el7_9.x86_64" &&\

        PATH=$PYTHON_PATH:$PATH:$JAVA_HOME/bin &&\
        ln -sf /usr/local/bin/python3.9 /usr/bin/python &&\

        cd bazel &&\
        pwd && \
        ls &&\
        ./compile.sh  && \
        pwd && \
        ls output && \
        cp  ./output/bazel /usr/bin && \
        bazel --version


RUN  pip3 install --no-cache-dir conan==1.52.0
RUN  conan user
RUN  conan profile new default --detect --force
RUN  conan profile update settings.compiler.libcxx=libstdc++11 default
RUN  conan config set general.parallel_download=$(nproc)
RUN  conan config set general.cpu_count=$(nproc)
#RUN  conan config install conan
RUN  conan remote add duckstax http://conan.duckstax.com:9300

WORKDIR /app/build
COPY ./conanfile.txt ./conanfile.txt
RUN conan install . --build missing -s build_type=Release

WORKDIR /app/wasm_build
COPY conan/profiles/wasm ./conan/profiles/wasm
RUN conan config install conan
COPY conanfile-wasm.txt ./
RUN conan install -pr wasm --profile:build=default --profile:host=wasm -g=virtualenv --build missing -s build_type=Release conanfile-wasm.txt -if=./wasm  -of=./wasm

WORKDIR /app
COPY ./integration ./integration
COPY ./cmake ./cmake
COPY ./components ./components
COPY ./core ./core
COPY ./services ./services
COPY ./wasm ./wasm
COPY ./CMakeLists.txt ./CMakeLists.txt

#WORKDIR /app/wasm_build
#RUN source ./wasm/activate.sh  && \
#    cmake  ..  -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$EMSCRIPTEN/cmake/Modules/Platform/Emscripten.cmake -DDEV_MODE=OFF -DWASM_BUILD=ON &&\
#    cmake --build .

WORKDIR /app/build

RUN cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DDEV_MODE=ON && \
    cmake --build .

#RUN cp -p  /app/wasm_build/bin/*.wasm  /app/build/components/wasm_runner/tests/

#RUN ctest -C --output-on-failure

#RUN cd integration/python/ && pytest