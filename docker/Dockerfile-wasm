FROM ubuntu:20.04

ENV TZ=America/US
ENV DEBIAN_FRONTEND=noninteractive

RUN apt update && \
    apt upgrade -y && \
    apt install -y \
        build-essential \
        cmake \
        ninja-build \
        python3-pip \
        python3-venv \
        python3-dev curl gnupg apt-transport-https && \
    curl -fsSL https://bazel.build/bazel-release.pub.gpg | apt-key add && \
        echo 'deb https://storage.googleapis.com/bazel-apt stable jdk1.8' | tee /etc/apt/sources.list.d/bazel.list && \
        apt update && \
        apt install -y bazel bazel-4.1.0 python3-pip git && \
    apt clean && \
    rm -rf /var/lib/apt/lists/* && \
    pip3 install --no-cache-dir conan==1.48.0 pytest==6.2.5 && \
    conan user && \
    conan profile new default --detect --force && \
    conan profile update settings.compiler.libcxx=libstdc++11 default && \
    conan config set general.parallel_download=$(nproc) && \
    conan config set general.cpu_count=$(nproc) && \
    conan remote add duckstax http://conan.duckstax.com:9300

RUN rm /bin/sh && ln -s /bin/bash /bin/sh

WORKDIR /app/build
COPY conanfile.txt ./
RUN conan install . --build missing -s build_type=Release

WORKDIR /app/wasm_build
COPY conan/profiles/wasm ./conan/profiles/wasm
RUN conan config install conan
COPY conanfile-wasm.txt ./
RUN conan install -pr wasm --profile:build=default --profile:host=wasm --build missing -s build_type=Release conanfile-wasm.txt -if=./wasm  -of=./wasm
RUN conan install emsdk/3.1.16@_/_ -g virtualenv  -s build_type=Release --build missing

WORKDIR /app
COPY ./apps ./apps
COPY ./cmake ./cmake
COPY ./components ./components
COPY ./core ./core
COPY ./services ./services
COPY ./wasm ./wasm
COPY ./CMakeLists.txt ./CMakeLists.txt

WORKDIR /app/wasm_build
RUN source ./activate.sh  && \
    cmake  ..  -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$EMSCRIPTEN/cmake/Modules/Platform/Emscripten.cmake -DDEV_MODE=ON -DWASM_BUILD=ON&&\
    cmake --build .

WORKDIR /app/build
RUN cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DDEV_MODE=ON && \
    cmake --build .  --target duck_charmer

RUN ctest -V
RUN pytest
