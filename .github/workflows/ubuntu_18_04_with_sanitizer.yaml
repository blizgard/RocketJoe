name: ubuntu 18.04 with sanitizer
on: [push, pull_request]
jobs:
  run:
    name: Run
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-18.04]
        python-version: [ 3.6]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
            sudo apt-get update \
            && sudo apt-get install -y \
            python3-pip python3-dev

      - name: conan installation and configuration
        run: |
          pip install conan==1.48.0 pytest==6.2.5
          conan user
          conan profile new default --detect --force
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan profile new emscripten-module
          conan profile update settings.compiler=clang emscripten-module
          conan profile update settings.compiler.version=15 emscripten-module
          conan profile update settings.compiler.libcxx=libc++ emscripten-module
          conan profile update settings.arch=wasm emscripten-module
          conan profile update settings.os=Emscripten emscripten-module
          echo -e 'LDFLAGS=--no-entry -s STANDALONE_WASM -s PURE_WASI=1 -s ABORTING_MALLOC=0 -s EXPORTED_FUNCTIONS=['_malloc'] -s ERROR_ON_UNDEFINED_SYMBOLS=0\n[tool_requires]\nemsdk/3.1.7' >> "${HOME}/.conan/profiles/emscripten-module"
          conan config set general.parallel_download=$(nproc)
          conan config set general.cpu_count=$(nproc)
          conan remote add duckstax http://conan.duckstax.com:9300

      - name: download dependencies
        run: |
          mkdir build && cd build
          cp ../conanfile.txt .
          conan install . --build missing -s build_type=Release

      - name: build
        env:
          CC: gcc
        run: |
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DADDRESS_SANITIZER=ON -DDEV_MODE=ON
          cmake --build . --parallel

      - name: Test
        run: cd build && ctest -C

      - name: PyTest
        run: cd build/apps/duck_charmer/ && pytest
